hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations + required_car_parking_spaces , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations + required_car_parking_spaces + agent, method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations + required_car_parking_spaces + customer_type , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations   , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations + required_car_parking_spaces + arrival_date_year  , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations + required_car_parking_spaces + arrival_date_month   , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations + required_car_parking_spaces + stays_in_weekend_nights   , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations + required_car_parking_spaces + stays_in_week_nights   , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations + required_car_parking_spaces + adults   , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations + required_car_parking_spaces + children   , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations + required_car_parking_spaces + meal   , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations + required_car_parking_spaces + company   , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations + required_car_parking_spaces + adr  , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations + required_car_parking_spaces + days_in_waiting_list   , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations + required_car_parking_spaces + assigned_room_type   , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +previous_cancellations + required_car_parking_spaces + assigned_room_type   , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +distribution_channel +previous_cancellations + required_car_parking_spaces + assigned_room_type   , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations + required_car_parking_spaces + assigned_room_type +hotel   , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations + required_car_parking_spaces + assigned_room_type + agent , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
printcp(hotel.model)
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +booking_changes +market_segment +previous_cancellations + required_car_parking_spaces + agent , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
printcp(hotel.model)
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +market_segment +previous_cancellations + required_car_parking_spaces + agent , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
printcp(hotel.model)
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests +previous_cancellations + required_car_parking_spaces + agent , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
printcp(hotel.model)
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests + required_car_parking_spaces + agent , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
printcp(hotel.model)
plotcp(hotel.model)
printcp(hotel.model)
plotcp(hotel.model)
pruned.hotel.model <- prune(hotel.model,cp=0.01)
pruned.hotel.model <- prune(hotel.model,cp=0.01)
pruned.hotel.model <- prune(hotel.model,cp=0.01)
pruned.hotel.fit <- predict(pruned.hotel.model, hotel.test, type = "class")
pruned.hotel.model <- prune(hotel.model,cp=0.01)
pruned.hotel.fit <- predict(pruned.hotel.model, hotel.test, type = "class")
confusionMatrix(pruned.hotel.fit,as.factor(hotel.test$is_canceled))
pruned.hotel.model <- prune(hotel.model,cp=0.001)
pruned.hotel.fit <- predict(pruned.hotel.model, hotel.test, type = "class")
confusionMatrix(pruned.hotel.fit,as.factor(hotel.test$is_canceled))
pruned.hotel.model <- prune(hotel.model,cp=0.000001)
pruned.hotel.fit <- predict(pruned.hotel.model, hotel.test, type = "class")
confusionMatrix(pruned.hotel.fit,as.factor(hotel.test$is_canceled))
pruned.hotel.model <- prune(hotel.model,cp=0.1)
pruned.hotel.fit <- predict(pruned.hotel.model, hotel.test, type = "class")
confusionMatrix(pruned.hotel.fit,as.factor(hotel.test$is_canceled))
pruned.hotel.model <- prune(hotel.model,cp=0.05)
pruned.hotel.fit <- predict(pruned.hotel.model, hotel.test, type = "class")
confusionMatrix(pruned.hotel.fit,as.factor(hotel.test$is_canceled))
pruned.hotel.model <- prune(hotel.model,cp=0.01)
pruned.hotel.fit <- predict(pruned.hotel.model, hotel.test, type = "class")
confusionMatrix(pruned.hotel.fit,as.factor(hotel.test$is_canceled))
pruned.hotel.model <- prune(hotel.model,cp=0.0099)
pruned.hotel.fit <- predict(pruned.hotel.model, hotel.test, type = "class")
confusionMatrix(pruned.hotel.fit,as.factor(hotel.test$is_canceled))
pruned.hotel.model <- prune(hotel.model,cp=0.008)
pruned.hotel.fit <- predict(pruned.hotel.model, hotel.test, type = "class")
confusionMatrix(pruned.hotel.fit,as.factor(hotel.test$is_canceled))
pruned.hotel.model <- prune(hotel.model,cp=0.007)
pruned.hotel.fit <- predict(pruned.hotel.model, hotel.test, type = "class")
confusionMatrix(pruned.hotel.fit,as.factor(hotel.test$is_canceled))
pruned.hotel.model <- prune(hotel.model,cp=0.012)
pruned.hotel.fit <- predict(pruned.hotel.model, hotel.test, type = "class")
confusionMatrix(pruned.hotel.fit,as.factor(hotel.test$is_canceled))
pruned.hotel.model <- prune(hotel.model,cp=0.015)
pruned.hotel.fit <- predict(pruned.hotel.model, hotel.test, type = "class")
confusionMatrix(pruned.hotel.fit,as.factor(hotel.test$is_canceled))
pruned.hotel.model <- prune(hotel.model,cp=0.02)
pruned.hotel.fit <- predict(pruned.hotel.model, hotel.test, type = "class")
confusionMatrix(pruned.hotel.fit,as.factor(hotel.test$is_canceled))
pruned.hotel.model <- prune(hotel.model,cp=0.017)
pruned.hotel.fit <- predict(pruned.hotel.model, hotel.test, type = "class")
confusionMatrix(pruned.hotel.fit,as.factor(hotel.test$is_canceled))
pruned.hotel.model <- prune(hotel.model,cp=0.018)
pruned.hotel.fit <- predict(pruned.hotel.model, hotel.test, type = "class")
confusionMatrix(pruned.hotel.fit,as.factor(hotel.test$is_canceled))
pruned.hotel.model <- prune(hotel.model,cp=0.01)
pruned.hotel.fit <- predict(pruned.hotel.model, hotel.test, type = "class")
confusionMatrix(pruned.hotel.fit,as.factor(hotel.test$is_canceled))
library("dplyr")
library("plyr")
library(rpart)
library(caret)
library(rpart.plot)
library(ROCR)
hotel.df <- read.csv("hotel_bookings.csv", sep=",", header=T)
cat("Resort hotel frequency:", sum(hotel.df$hotel=="Resort Hotel"),"\nCity hotel frequency:", sum(hotel.df$hotel=="City Hotel"))
cat("Number of guests who canceled reservation:",sum(hotel.df$is_canceled==1) ,"\nNumber of guests did not cancel the reservation:",sum(hotel.df$is_canceled==0))
cust.type.df <- count(hotel.df,"customer_type")
cat("Customer type with the most reservations is Transient with", cust.type.df[which.max(cust.type.df$freq),2],"reservations")
var0 <- hotel.df[which.max(hotel.df$required_car_parking_spaces),"required_car_parking_spaces"]
cat(sum(hotel.df$required_car_parking_spaces == var0),"customers required the most number of parking spaces(" ,var0,")")
var1 <- hotel.df[which.min(hotel.df$required_car_parking_spaces),"required_car_parking_spaces"]
cat(sum(hotel.df$required_car_parking_spaces == var1),"customers required the least number of parking spaces(" ,var1,")")
perc_good <- sum(as.character(hotel.df$reserved_room_type)==as.character(hotel.df$assigned_room_type))/119390*100
cat(perc_good,"% of the people who expressed a room preference during reservation got the room during check-in.")
hist.hotel.info.h1 <- filter(hotel.df, hotel == "City Hotel")
hist.hotel.info.h2 <- filter(hotel.df, hotel == "Resort Hotel"& country!= "NULL")
hist.hotel.table.h1 <- table(hist.hotel.info.h1$country)
hist.hotel.table.h2 <- table(hist.hotel.info.h2$country)
barplot(tail(sort(hist.hotel.table.h1),n=10), main = "Top 10 Origins for Resort Hotels",ylab = "Amount of bookings per country",col = rainbow(10))
barplot(tail(sort(hist.hotel.table.h2),n=10),main = "Top 10 Origins for City Hotels",ylab = "Amount of bookings per country",col = rainbow(10))
#a.)
set.seed(1122)
index <- sample(1:nrow(hotel.df), size=0.1*nrow(hotel.df))
hotel.test <- hotel.df[index, ]
hotel.train <- hotel.df[-index, ]
hotel.model <- rpart(is_canceled ~ deposit_type + lead_time +country + total_of_special_requests + required_car_parking_spaces + agent , method="class", data=hotel.train)
rpart.plot(hotel.model, main="Hotel Cancelation Model")
print("The varibibles I chose were deposit_type, lead_time, country, total_of_special_requests, booking_changes, market_segment, previous_cancellations, and required_car_parking_spaces")
hotel.fit <- predict(hotel.model, hotel.test, type = "class")
confusionMatrix(hotel.fit,as.factor(hotel.test$is_canceled))
print("A20393813, 0.804, 0.196, 0.7833, 0.6976, 0.8689")
pruned.rocr <- predict(hotel.model, newdata=hotel.test, type="prob")[,2]
f.pred <- prediction(pruned.rocr, hotel.test$is_canceled)
plot(performance(f.pred, "tpr", "fpr"), colorize=T, lwd=3)
abline(0,1)
auc.pruned <- performance(f.pred, measure = "auc")
cat(paste("The area under curve (AUC) for the full tree is ",
round(auc.pruned@y.values[[1]], 3)))
printcp(hotel.model)
plotcp(hotel.model)
